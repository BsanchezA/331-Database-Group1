Bryan Sanchez Group 1 Hw # 2
---------------------------------------

USE WideWorldImporters
Go
-- 1 -------
-- Proposition: We want to find the customers who have an outstanding balance and find the person to contact for. How would this go about?

Select t.CustomerID, t.TransactionTypeID, t.OutstandingBalance
From Sales.CustomerTransactions t
INNER JOIN Sales.Invoices i
	ON t.CustomerID = i.ContactPersonID
Where OutstandingBalance > 0

-- 2 ---------
-- Proposition: The company is working with different suppliers and which can have different languages they can speak. To create a better 
relationship, how can we see each employee that speak other languages and see if they can matchup.

Select P.FullName, S.SupplierName
From (SELECT FullName, OtherLanguages, IsEmployee FROM Application.People) P 
Cross Join (Select SupplierName FROM Purchasing.Suppliers) S
Where 
(P.OtherLanguages Is Not Null
AND
P.IsEmployee = 1)

-- 3 --------

Proposition: Find the highest credit limit a customer has and find the city they are located

Select C.CustomerID, C.CreditLimit, C.DeliveryCityID
From Sales.Customers C
Inner Join Application.Cities T
	on C.DeliveryCityID = T.CityID
Order BY CreditLimit Desc

-- 4 -----

Proposition: The company wants to see how much of the stock items are being sold. How would we be able to see the whole data regardless if
it has zero. 

Select P.PackageTypeID, P.StockItemID
From Purchasing.PurchaseOrderLines as P
Full Outer Join Sales.Orderlines AS L On L.StockItemID = P.StockItemID

-- 5 ---------

Proposition: How can we see all the colors avalibale in the warehouse and link it with the products we sell.

Select c.ColorID, c.ColorName, p.PackageTypeID, p.PackageTypeName
From Warehouse.Colors AS c
	Cross Join Warehouse.PackageTypes AS p

-- 6 --------

Proposition: How would be able to see the transactions that occurred per day?

Select CAST(t.TransactionOccurredWhen AS date) AS [DATE],
		COUNT(*) AS TRANSACTIONCOUNT
From Warehouse.StockItemTransactions AS t
GROUP BY CAST(t.TransactionOccurredWhen AS date)
ORDER BY [Date] DESC

-- 7 ------

Proposition: We want to keep track of suppliers that have not paid within the specificed 2 weeks. How can we clearly see this information?

Select SupplierID, SupplierName, SupplierCategoryID,PaymentDays, BankAccountCode
From Purchasing.Suppliers
WHERE PaymentDays > 14

-- 8 --------
Proposition: To keep track of quality control of orders. How can we see the difference of when the order was picked and the expected delivery
date. If it was picked on the day of expected date and beyond, mark it as late. If earlier, mark it as early

Select O.CustomerPurchaseOrderNumber, O.OrderID, O.LastEditedBy,
	DATEDIFF(DAY, O.ExpectedDeliveryDate, O.PickingCompletedWhen) AS DAYSDIFFERENCE,
	CASE
		WHEN O.PickingCompletedWhen > O.ExpectedDeliveryDate THEN 'Late'
		WHEN O.PickingCompletedWhen < O.ExpectedDeliveryDate Then 'Early'
	END AS ORDERSTATUS
FROM Sales.Orders O

-- 9 -------

Proposition: Find the subregions which have the least populations for future operation expansion ideas.

Select Subregion, LatestRecordedPopulation
From Application.Countries
ORDER BY LatestRecordedPopulation ASC

-- 10 -----
Proposition: Find out the net amount (Without tax) that the customers have purchased overall.

Select I.CustomerID, I.OrderID, 
SUM(OL.UnitPrice * OL.Quantity) AS NETPRICESPENT
From Sales.Invoices I
JOIN Sales.OrderLines OL
	ON I.OrderID = OL.OrderID
GROUP By I.CustomerID, I.OrderID 
ORDER BY NETPRICESPENT